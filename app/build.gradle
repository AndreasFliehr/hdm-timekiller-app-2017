apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId "de.hdm.dp.bd.chronophage"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        // set to true to turn off analysis progress
        // reporting by lint
        quiet false
        // if true, also release builds will be analysed
        checkReleaseBuilds true
        // if true, stop the gradle build if errors are found
        abortOnError false
        // if true, only report errors
        ignoreWarnings false
        // if true, generate an XML report, e.g., for use by Jenkins
        xmlReport true
        lintConfig file("$project.rootDir/config/linter.xml")
        xmlOutput file("$project.buildDir/reports/lint/lint-results.xml")
    }
}


repositories {
    //In diesem Repository ist die Library für das Kuchendiagramm zu finden
    maven { url "https://jitpack.io" }
}

dependencies {
    compile 'com.android.support:appcompat-v7:26.0.0'
    compile 'com.android.support:design:26.0.0'

    //Hier wird angegeben, dass diese Library mit compiliert werden muss (Kuchendiagramm)
    compile 'com.github.PhilJay:MPAndroidChart:v2.1.6'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
}

//Konfiguration von Checkstyle, insbesondere Referenz des eigenen Checkstyle-Filestask
task checkstyle(type: Checkstyle) {
    //wo liegt das checkstyle-Konfigurationsfile (das sollte auch das
    //Konfigurationsfile sein, das in AdnroidStudio benutzt wird)
    configFile file("${project.rootDir}/checkstyle.xml")
    //optional, wo liegt das File, in dem zu unterdrückende Warnungen stehen
    configProperties.checkstyleSuppressionsPath = file("${project.rootDir}/config/checkstyle_suppressions.xml").absolutePath
    source 'src'
    include '**/*.java' // bei der Analyse durch Checkstyle berücksichtigen
    exclude '**/gen/**' // bei der Analyse durch Checkstyle nicht berücksichtigen

    //Angabe, welche Report-Formate benutzt und wo sie gespeichert werden
    reports {
        xml.enabled = true
        html.enabled = true
        xml {
            destination file("$project.buildDir/reports/checkstyle/checkstyle-results.xml")
        }
        html {
            destination file("$project.buildDir/reports/checkstyle/checkstyle-results.html")
        }
    }
    classpath = files()
}

/**
 * notwendiger Workaround für die Benutzung von Checkstyle
 * Details: http://stackoverflow.com/questions/28749804/how-to-compile-project-with-
 google-checkstyle-rules-with-gradle */

configurations {
    checkstyleOverride
}
dependencies {
    checkstyleOverride('com.puppycrawl.tools:checkstyle:7.6.1')
}
tasks.withType(Checkstyle) {
    checkstyleClasspath = project.configurations.checkstyleOverride
}

/**
 * Ende des notwendigen Workarounds für die Benutzung von Checkstyle
 */
