// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        //Notwendig seit Version 26
        maven {
            url "https://maven.google.com"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        //Notwendig seit Version 26
        maven {
            url "https://maven.google.com"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//Konfiguration von Checkstyle, insbesondere Referenz des eigenen Checkstyle-Filestask
task checkstyle(type: Checkstyle) {
    //wo liegt das checkstyle-Konfigurationsfile (das sollte auch das
    //Konfigurationsfile sein, das in AdnroidStudio benutzt wird)
    configFile file("${project.rootDir}/checkstyle.xml")
    //optional, wo liegt das File, in dem zu unterdrückende Warnungen stehen
    configProperties.checkstyleSuppressionsPath = file("${project.rootDir}/config/checkstyle_suppressions.xml").absolutePath
    source 'src'
    include '**/*.java' // bei der Analyse durch Checkstyle berücksichtigen
    exclude '**/gen/**' // bei der Analyse durch Checkstyle nicht berücksichtigen

    //Angabe, welche Report-Formate benutzt und wo sie gespeichert werden
    reports {
        xml.enabled = true
        html.enabled = true
        xml {
            destination file("$project.buildDir/reports/checkstyle/checkstyle-results.xml")
        }
        html {
            destination file("$project.buildDir/reports/checkstyle/checkstyle-results.html")
        }
    }
    classpath = files()
}

/**
 * notwendiger Workaround für die Benutzung von Checkstyle
 * Details: http://stackoverflow.com/questions/28749804/how-to-compile-project-with-
 google-checkstyle-rules-with-gradle */

configurations {
    checkstyleOverride
}
dependencies {
    checkstyleOverride('com.puppycrawl.tools:checkstyle:7.6.1')
}
tasks.withType(Checkstyle) {
    checkstyleClasspath = project.configurations.checkstyleOverride
}

/**
 * Ende des notwendigen Workarounds für die Benutzung von Checkstyle
 */